#define _GNU_SOURCE

#ifndef CONSTANT_STRING_H
#define CONSTANT_STRING_H

#include <arpa/inet.h>
#include <asm-generic/ioctls.h>
#include <fcntl.h>
#include <linux/ax25.h>
#include <linux/if_eql.h>
#include <linux/if_plip.h>
#include <linux/if_ppp.h>
#include <linux/ipx.h>
#include <linux/mroute.h>
#include <linux/sockios.h>
#include <linux/wireless.h>
#include <netinet/tcp.h>
#ifdef __ANDROID__
#include <linux/udp.h>
#else
#include <netinet/udp.h>
#endif
#include <sys/socket.h>
#include <unistd.h>

#define MEMBER_SIZE(type, member) sizeof(((type *)0)->member)

typedef struct {
        int cons;
        const char str[40];
} IntStrPair;

char *alloc_sock_domain_str(int domain);
char *alloc_sock_type_str(int type);

// Socket options
char *alloc_sockopt_level(int level);
char *alloc_sockoptname(int level, int optname);

char *alloc_fcntl_cmd_str(int cmd);
char *alloc_ioctl_request_str(int request);

static const IntStrPair SOCKET_DOMAINS[] = {
    {AF_UNIX, "AF_UNIX"}, {AF_INET, "AF_INET"},       {AF_INET6, "AF_INET6"},
    {AF_IPX, "AF_IPX"},   {AF_NETLINK, "AF_NETLINK"}, {AF_PACKET, "AF_PACKET"}};

static const IntStrPair SOCKET_TYPES[] = {{SOCK_STREAM, "SOCK_STREAM"},
                                          {SOCK_DGRAM, "SOCK_DGRAM"},
                                          {SOCK_SEQPACKET, "SOCK_SEQPACKET"},
                                          {SOCK_RAW, "SOCK_RAW"},
                                          {SOCK_RDM, "SOCK_RDM"},
                                          {SOCK_PACKET, "SOCK_PACKET"}};

static const IntStrPair SOCKOPT_LEVELS[] = {{IPPROTO_IP, "IPPROTO_IP"},
                                            {SOL_SOCKET, "SOL_SOCKET"},
                                            {IPPROTO_TCP, "IPPROTO_TCP"},
                                            {IPPROTO_UDP, "IPPROTO_UDP"},
                                            {IPPROTO_IPV6, "IPROTO_IPV6"}};

static const IntStrPair SOL_SOCKET_OPTIONS[] = {
    {SO_DEBUG, "SO_DEBUG"},
    {SO_REUSEADDR, "SO_REUSEADDR"},
    {SO_TYPE, "SO_TYPE"},
    {SO_ERROR, "SO_ERROR"},
    {SO_DONTROUTE, "SO_DONTROUTE"},
    {SO_BROADCAST, "SO_BROADCAST"},
    {SO_SNDBUF, "SO_SNDBUF"},
    {SO_RCVBUF, "SO_RCVBUF"},
    {SO_SNDBUFFORCE, "SO_SNDBUFFORCE"},
    {SO_RCVBUFFORCE, "SO_RCVBUFFORCE"},
    {SO_KEEPALIVE, "SO_KEEPALIVE"},
    {SO_OOBINLINE, "SO_OOBINLINE"},
    {SO_NO_CHECK, "SO_NO_CHECK"},
    {SO_PRIORITY, "SO_PRIORITY"},
    {SO_LINGER, "SO_LINGER"},
    {SO_BSDCOMPAT, "SO_BSDCOMPAT"},
    {SO_REUSEPORT, "SO_REUSEPORT"},
    {SO_PASSCRED, "SO_PASSCRED"},
    {SO_PASSCRED, "SO_PASSCRED"},
    {SO_PEERCRED, "SO_PEERCRED"},
    {SO_RCVLOWAT, "SO_RCVLOWAT"},
    {SO_SNDLOWAT, "SO_SNDLOWAT"},
    {SO_RCVTIMEO, "SO_RCVTIMEO"},
    {SO_SNDTIMEO, "SO_SNDTIMEO"},
    {SO_SECURITY_AUTHENTICATION, "SO_SECURITY_AUTHENTICATION"},
    {SO_SECURITY_ENCRYPTION_TRANSPORT, "SO_SECURITY_ENCRYPTION_TRANSPORT"},
    {SO_SECURITY_ENCRYPTION_NETWORK, "SO_SECURITY_ENCRYPTION_NETWORK"},
    {SO_BINDTODEVICE, "SO_BINDTODEVICE"},
    {SO_ATTACH_FILTER, "SO_ATTACH_FILTER"},
    {SO_DETACH_FILTER, "SO_DETACH_FILTER"},
    {SO_GET_FILTER, "SO_GET_FILTER"},
    {SO_PEERNAME, "SO_PEERNAME"},
    {SO_TIMESTAMP, "SO_TIMESTAMP"},
    {SO_TIMESTAMP, "SO_TIMESTAMP"},
    {SO_ACCEPTCONN, "SO_ACCEPTCONN"},
    {SO_PEERSEC, "SO_PEERSEC"},
    {SO_PASSSEC, "SO_PASSSEC"},
    {SO_TIMESTAMPNS, "SO_TIMESTAMPNS"},
    {SO_MARK, "SO_MARK"},
    {SO_TIMESTAMPING, "SO_TIMESTAMPING"},
    {SO_PROTOCOL, "SO_PROTOCOL"},
    {SO_DOMAIN, "SO_DOMAIN"},
    {SO_RXQ_OVFL, "SO_RXQ_OVFL"},
    {SO_WIFI_STATUS, "SO_WIFI_STATUS"},
    {SO_PEEK_OFF, "SO_PEEK_OFF"},
    {SO_NOFCS, "SO_NOFCS"},
    {SO_LOCK_FILTER, "SO_LOCK_FILTER"},
    {SO_SELECT_ERR_QUEUE, "SO_SELECT_ERR_QUEUE"},
    {SO_BUSY_POLL, "SO_BUSY_POLL"},
    {SO_MAX_PACING_RATE, "SO_MAX_PACING_RATE"},
    {SO_BPF_EXTENSIONS, "SO_BPF_EXTENSIONS"}};

static const IntStrPair IPPROTO_IP_OPTIONS[] = {
    {IP_TOS, "IP_TOS"},
    {IP_TTL, "IP_TTL"},
    {IP_HDRINCL, "IP_HDRINCL"},
    {IP_OPTIONS, "IP_OPTIONS"},
    {IP_ROUTER_ALERT, "IP_ROUTER_ALERT"},
    {IP_RECVOPTS, "IP_RECVOPTS"},
    {IP_RETOPTS, "IP_RETOPTS"},
    {IP_PKTINFO, "IP_PKTINFO"},
    {IP_PKTOPTIONS, "IP_PKTOPTIONS"},
    {IP_MTU_DISCOVER, "IP_MTU_DISCOVER"},
    {IP_RECVERR, "IP_RECVERR"},
    {IP_RECVTTL, "IP_RECVTTL"},
    {IP_RECVTOS, "IP_RECVTOS"},
    {IP_MTU, "IP_MTU"},
    {IP_FREEBIND, "IP_FREEBIND"},
    {IP_IPSEC_POLICY, "IP_IPSEC_POLICY"},
    {IP_XFRM_POLICY, "IP_XFRM_POLICY"},
    {IP_PASSSEC, "IP_PASSSEC"},
    {IP_TRANSPARENT, "IP_TRANSPARENT"},
    {IP_RECVRETOPTS, "IP_RECVRETOPTS"},
    {IP_ORIGDSTADDR, "IP_ORIGDSTADDR"},
    {IP_RECVORIGDSTADDR, "IP_RECVORIGDSTADDR"},
    {IP_MINTTL, "IP_MINTTL"},
    {IP_NODEFRAG, "IP_NODEFRAG"},
    {IP_MULTICAST_IF, "IP_MULTICAST_IF"},
    {IP_MULTICAST_TTL, "IP_MULTICAST_TTL"},
    {IP_MULTICAST_LOOP, "IP_MULTICAST_LOOP"},
    {IP_ADD_MEMBERSHIP, "IP_ADD_MEMBERSHIP"},
    {IP_DROP_MEMBERSHIP, "IP_DROP_MEMBERSHIP"},
    {IP_UNBLOCK_SOURCE, "IP_UNBLOCK_SOURCE"},
    {IP_BLOCK_SOURCE, "IP_BLOCK_SOURCE"},
    {IP_ADD_SOURCE_MEMBERSHIP, "IP_ADD_SOURCE_MEMBERSHIP"},
    {IP_DROP_SOURCE_MEMBERSHIP, "IP_DROP_SOURCE_MEMBERSHIP"},
    {IP_MSFILTER, "IP_MSFILTER"},
    {MCAST_JOIN_GROUP, "MCAST_JOIN_GROUP"},
    {MCAST_BLOCK_SOURCE, "MCAST_BLOCK_SOURCE"},
    {MCAST_UNBLOCK_SOURCE, "MCAST_UNBLOCK_SOURCE"},
    {MCAST_LEAVE_GROUP, "MCAST_LEAVE_GROUP"},
    {MCAST_JOIN_SOURCE_GROUP, "MCAST_JOIN_SOURCE_GROUP"},
    {MCAST_LEAVE_SOURCE_GROUP, "MCAST_LEAVE_SOURCE_GROUP"},
    {MCAST_MSFILTER, "MCAST_MSFILTER"},
    {IP_MULTICAST_ALL, "IP_MULTICAST_ALL"},
    {IP_UNICAST_IF, "IP_UNICAST_IF"}};

static const IntStrPair IPPROTO_IPV6_OPTIONS[] = {
    {IPV6_ADDRFORM, "IPV6_ADDRFORM"},
    {IPV6_2292PKTINFO, "IPV6_2292PKTINFO"},
    {IPV6_2292HOPOPTS, "IPV6_2292HOPOPTS"},
    {IPV6_2292DSTOPTS, "IPV6_2292DSTOPTS"},
    {IPV6_2292RTHDR, "IPV6_2292RTHDR"},
    {IPV6_2292PKTOPTIONS, "IPV6_2292PKTOPTIONS"},
    {IPV6_CHECKSUM, "IPV6_CHECKSUM"},
    {IPV6_HOPLIMIT, "IPV6_HOPLIMIT"},
    {IPV6_NEXTHOP, "IPV6_NEXTHOP"},
    {IPV6_AUTHHDR, "IPV6_AUTHHDR"},
#ifdef __ANDROID__
    {IPV6_FLOWINFO, "IPV6_FLOWINFO"},
#endif
    {IPV6_UNICAST_HOPS, "IPV6_UNICAST_HOPS"},
    {IPV6_MULTICAST_IF, "IPV6_MULTICAST_IF"},
    {IPV6_MULTICAST_HOPS, "IPV6_MULTICAST_HOPS"},
    {IPV6_MULTICAST_LOOP, "IPV6_MULTICAST_LOOP"},
    {IPV6_ADD_MEMBERSHIP, "IPV6_ADD_MEMBERSHIP"},
    {IPV6_DROP_MEMBERSHIP, "IPV6_DROP_MEMBERSHIP"},
    {IPV6_ROUTER_ALERT, "IPV6_ROUTER_ALERT"},
    {IPV6_MTU_DISCOVER, "IPV6_MTU_DISCOVER"},
    {IPV6_MTU, "IPV6_MTU"},
    {IPV6_RECVERR, "IPV6_RECVERR"},
    {IPV6_V6ONLY, "IPV6_V6ONLY"},
    {IPV6_JOIN_ANYCAST, "IPV6_JOIN_ANYCAST"},
    {IPV6_LEAVE_ANYCAST, "IPV6_LEAVE_ANYCAST"},
#ifdef __ANDROID__
    {IPV6_FLOWLABEL_MGR, "IPV6_FLOWLABEL_MGR"},
    {IPV6_FLOWINFO_SEND, "IPV6_FLOWINFO_SEND"},
#endif
    {IPV6_IPSEC_POLICY, "IPV6_IPSEC_POLICY"},
    {IPV6_XFRM_POLICY, "IPV6_XFRM_POLICY"},
    {IPV6_RECVPKTINFO, "IPV6_RECVPKTINFO"},
    {IPV6_PKTINFO, "IPV6_PKTINFO"},
    {IPV6_RECVHOPLIMIT, "IPV6_RECVHOPLIMIT"},
    {IPV6_HOPLIMIT, "IPV6_HOPLIMIT"},
    {IPV6_RECVHOPOPTS, "IPV6_RECVHOPOPTS"},
    {IPV6_HOPOPTS, "IPV6_HOPOPTS"},
    {IPV6_RTHDRDSTOPTS, "IPV6_RTHDRDSTOPTS"},
    {IPV6_RECVRTHDR, "IPV6_RECVRTHDR"},
    {IPV6_RTHDR, "IPV6_RTHDR"},
    {IPV6_RECVDSTOPTS, "IPV6_RECVDSTOPTS"},
    {IPV6_DSTOPTS, "IPV6_DSTOPTS"},
    {IPV6_RECVPATHMTU, "IPV6_RECVPATHMTU"},
    {IPV6_PATHMTU, "IPV6_PATHMTU"},
    {IPV6_DONTFRAG, "IPV6_DONTFRAG"},
    {IPV6_RECVTCLASS, "IPV6_RECVTCLASS"},
    {IPV6_TCLASS, "IPV6_TCLASS"},
#ifdef __ANDROID__
    {IPV6_ADDR_PREFERENCES, "IPV6_ADDR_PREFERENCES"},
    {IPV6_MINHOPCOUNT, "IPV6_MINHOPCOUNT"},
    {IPV6_ORIGDSTADDR, "IPV6_ORIGDSTADDR"},
    {IPV6_TRANSPARENT, "IPV6_TRANSPARENT"},
    {IPV6_UNICAST_IF, "IPV6_UNICAST_IF"}
#endif
};

static const IntStrPair IPPROTO_TCP_OPTIONS[] = {
    {TCP_NODELAY, "TCP_NODELAY"},
    {TCP_MAXSEG, "TCP_MAXSEG"},
    {TCP_CORK, "TCP_CORK"},
    {TCP_KEEPIDLE, "TCP_KEEPIDLE"},
    {TCP_KEEPINTVL, "TCP_KEEPINTVL"},
    {TCP_KEEPCNT, "TCP_KEEPCNT"},
    {TCP_SYNCNT, "TCP_SYNCNT"},
    {TCP_LINGER2, "TCP_LINGER2"},
    {TCP_DEFER_ACCEPT, "TCP_DEFER_ACCEPT"},
    {TCP_WINDOW_CLAMP, "TCP_WINDOW_CLAMP"},
    {TCP_INFO, "TCP_INFO"},
    {TCP_QUICKACK, "TCP_QUICKACK"},
    {TCP_CONGESTION, "TCP_CONGESTION"},
#if !defined(__ANDROID__) || __ANDROID_API__ >= 21
    {TCP_MD5SIG, "TCP_MD5SIG"},
    {TCP_THIN_LINEAR_TIMEOUTS, "TCP_THIN_LINEAR_TIMEOUTS"},
    {TCP_THIN_DUPACK, "TCP_THIN_DUPACK"},
    {TCP_USER_TIMEOUT, "TCP_USER_TIMEOUT"},
    {TCP_REPAIR, "TCP_REPAIR"},
    {TCP_REPAIR_QUEUE, "TCP_REPAIR_QUEUE"},
    {TCP_QUEUE_SEQ, "TCP_QUEUE_SEQ"},
    {TCP_REPAIR_OPTIONS, "TCP_REPAIR_OPTIONS"},
    {TCP_FASTOPEN, "TCP_FASTOPEN"},
    {TCP_TIMESTAMP, "TCP_TIMESTAMP"},
    {TCP_NOTSENT_LOWAT, "TCP_NOTSENT_LOWAT"}
#endif
};

static const IntStrPair IPPROTO_UDP_OPTIONS[] = {
    {UDP_CORK, "UDP_CORK"}
};

static const IntStrPair FCNTL_CMDS[] = {
    {F_GETFD, "F_GETFD"},           {F_GETFL, "F_GETFL"},
    {F_GETOWN, "F_GETOWN"},         {F_GETSIG, "F_GETSIG"},
    {F_GETLEASE, "F_GETLEASE"},     {F_GETPIPE_SZ, "F_GETPIPE_SZ"},
    {F_DUPFD, "F_DUPFD"},           {F_DUPFD_CLOEXEC, "F_DUPFD_CLOEXEC"},
    {F_SETFD, "F_SETFD"},           {F_SETFL, "F_SETFL"},
    {F_SETOWN, "F_SETOWN"},         {F_SETSIG, "F_SETSIG"},
    {F_SETLEASE, "F_SETLEASE"},     {F_NOTIFY, "F_NOTIFY"},
    {F_SETPIPE_SZ, "F_SETPIPE_SZ"}, {F_SETLK, "F_SETLK"},
    {F_SETLKW, "F_SETLKW"},         {F_GETLK, "F_GETLK"},
#ifdef __ANDROID__
    {F_GETLK64, "F_GETLK64"},       {F_SETLK64, "F_SETLK64"},
    {F_SETLKW64, "F_SETLKW64"},
#else
    {F_OFD_SETLK, "F_OFD_SETLK"},   {F_OFD_SETLKW, "F_OFD_SETLKW"},
    {F_OFD_GETLK, "F_OFD_GETLK"},
#endif
    {F_GETOWN_EX, "F_GETOWN_EX"},   {F_SETOWN_EX, "F_SETOWN_EX"}};

static const IntStrPair IOCTL_REQUESTS[] = {
    {FIONREAD, "FIOONREAD"},
    // <include/asm-i386/socket.h>
    {FIOSETOWN, "FIOSETOWN"},
    {SIOCSPGRP, "SIOCSPGRP"},
    {FIOGETOWN, "FIOGETOWN"},
    {SIOCGPGRP, "SIOCGPGRP"},
    //    {SIOCATMAR, "SIOCATMAR"},
    {SIOCGSTAMP, "SIOCGSTAMP"},

    // <include/asm-i386/termios.h>
    {TCGETS, "TCGETS"},
    {TCSETS, "TCSETS"},
    {TCSETSW, "TCSETSW"},
    {TCSETSF, "TCSETSF"},
    {TCGETA, "TCGETA"},
    {TCSETA, "TCSETA"},
    {TCSETAW, "TCSETAW"},
    {TCSETAF, "TCSETAF"},
    {TCSBRK, "TCSBRK"},
    {TCXONC, "TCXONC"},
    {TCFLSH, "TCFLSH"},
    {TIOCEXCL, "TIOCEXCL"},
    {TIOCNXCL, "TIOCNXCL"},
    {TIOCSCTTY, "TIOCSCTTY"},
    {TIOCGPGRP, "TIOCGPGRP"},
    {TIOCSPGRP, "TIOCSPGRP"},
    {TIOCOUTQ, "TIOCOUTQ"},
    {TIOCSTI, "TIOCSTI"},
    {TIOCGWINSZ, "TIOCGWINSZ"},
    {TIOCSWINSZ, "TIOCSWINSZ"},
    {TIOCMGET, "TIOCMGET"},
    {TIOCMBIS, "TIOCMBIS"},
    {TIOCMBIC, "TIOCMBIC"},
    {TIOCMSET, "TIOCMSET"},
    {TIOCGSOFTCAR, "TIOCGSOFTCAR"},
    {TIOCSSOFTCAR, "TIOCSSOFTCAR"},
    {FIONREAD, "FIONREAD"},
    {TIOCINQ, "TIOCINQ"},
    {TIOCLINUX, "TIOCLINUX"},
    {TIOCCONS, "TIOCCONS"},
    {TIOCGSERIAL, "TIOCGSERIAL"},
    {TIOCSSERIAL, "TIOCSSERIAL"},
    {TIOCPKT, "TIOCPKT"},
    {FIONBIO, "FIONBIO"},
    {TIOCNOTTY, "TIOCNOTTY"},
    {TIOCSETD, "TIOCSETD"},
    {TIOCGETD, "TIOCGETD"},
    {TCSBRKP, "TCSBRKP"},
    // {TIOCTTYGSTRUCT, "TIOCTTYGSTRUCT"},
    {FIONCLEX, "FIONCLEX"},
    {FIOCLEX, "FIOCLEX"},
    {FIOASYNC, "FIOASYNC"},
    {TIOCSERCONFIG, "TIOCSERCONFIG"},
    {TIOCSERGWILD, "TIOCSERGWILD"},
    {TIOCSERSWILD, "TIOCSERSWILD"},
    {TIOCGLCKTRMIOS, "TIOCGLCKTRMIOS"},
    {TIOCSLCKTRMIOS, "TIOCSLCKTRMIOS"},
    {TIOCSERGSTRUCT, "TIOCSERGSTRUCT"},
    {TIOCSERGETLSR, "TIOCSERGETLSR"},

    {TIOCSERGETMULTI, "TIOCSERGETMULTI"},
    {TIOCSERSETMULTI, "TIOCSERSETMULTI"},

    // <include/linux/ax25.h>
    {SIOCAX25GETUID, "SIOCAX25GETUID"},
    {SIOCAX25ADDUID, "SIOCAX25ADDUID"},
    {SIOCAX25DELUID, "SIOCAX25DELUID"},
    {SIOCAX25NOUID, "SIOCAX25NOUID"},
    //    {SIOCAX25DIGCTL, "SIOCAX25DIGCTL"},
    //    {SIOCAX25GETPARMS, "SIOCAX25GETPARMS"},
    //    {SIOCAX25SETPARMS, "SIOCAX25SETPARMS"},

    // <include/linux/,if_eql.h>
    {EQL_ENSLAVE, "EQL_ENSLAVE"},
    {EQL_EMANCIPATE, "EQL_EMANCIPATE"},
    {EQL_GETSLAVECFG, "EQL_GETSLAVECFG"},
    {EQL_SETSLAVECFG, "EQL_SETSLAVECFG"},
    {EQL_GETMASTRCFG, "EQL_GETMASTRCFG"},
    {EQL_SETMASTRCFG, "EQL_SETMASTRCFG"},

    // <include/linux/if_plip.h>
    {SIOCDEVPLIP, "SIOCDEVPLIP"},

    // <include/linux/if_ppp.h>
    /*
        {PPPIOCGFLAGS, "PPPIOCGFLAGS"},
        {PPPIOCSFLAGS, "PPPIOCSFLAGS"},
        {PPPIOCGASYNCMAP, "PPPIOCGASYNCMAP"},
        {PPPIOCSASYNCMAP, "PPPIOCSASYNCMAP"},
        {PPPIOCGUNIT, "PPPIOCGUNIT"},
        {PPPIOCSINPSIG, "PPPIOCSINPSIG"},
        {PPPIOCSDEBUG, "PPPIOCSDEBUG"},
        {PPPIOCGDEBUG, "PPPIOCGDEBUG"},
        {PPPIOCGSTAT, "PPPIOCGSTAT"},
        {PPPIOCGTIME, "PPPIOCGTIME"},
        {PPPIOCGXASYNCMAP, "PPPIOCGXASYNCMAP"},
        {PPPIOCSXASYNCMAP, "PPPIOCSXASYNCMAP"},
        {PPPIOCSMRU, "PPPIOCSMRU"},
        {PPPIOCRASYNCMAP, "PPPIOCRASYNCMAP"},
        {PPPIOCSMAXCID, "PPPIOCSMAXCID"},
    */
    // <include/linux/ipx.h>
    {SIOCAIPXITFCRT, "SIOCAIPXITFCRT"},
    {SIOCAIPXPRISLT, "SIOCAIPXPRISLT"},
    {SIOCIPXCFGDATA, "SIOCIPXCFGDATA"},

    // <include/linux/mroute.h>
    {SIOCGETVIFCNT, "SIOCGETVIFCNT"},
    {SIOCGETSGCNT, "SIOCGETSGCNT"},

    // <include/uapi/linux/wireless.h>
    {SIOCSIWCOMMIT, "SIOCSIWCOMMIT"},
    {SIOCGIWNAME, "SIOCGIWNAME"},
    {SIOCSIWNWID, "SIOCSIWNWID"},
    {SIOCGIWNWID, "SIOCGIWNWID"},
    {SIOCSIWFREQ, "SIOCSIWFREQ"},
    {SIOCGIWFREQ, "SIOCGIWFREQ"},
    {SIOCSIWMODE, "SIOCSIWMODE"},
    {SIOCGIWMODE, "SIOCGIWMODE"},
    {SIOCSIWSENS, "SIOCSIWSENS"},
    {SIOCGIWSENS, "SIOCGIWSENS"},
    {SIOCSIWRANGE, "SIOCSIWRANGE"},
    {SIOCGIWRANGE, "SIOCGIWRANGE"},
    {SIOCSIWPRIV, "SIOCSIWPRIV"},
    {SIOCGIWPRIV, "SIOCGIWPRIV"},
    {SIOCSIWSTATS, "SIOCSIWSTATS"},
    {SIOCGIWSTATS, "SIOCGIWSTATS"},
    {SIOCSIWSPY, "SIOCSIWSPY"},
    {SIOCGIWSPY, "SIOCGIWSPY"},
    {SIOCSIWTHRSPY, "SIOCSIWTHRSPY"},
    {SIOCGIWTHRSPY, "SIOCGIWTHRSPY"},
    {SIOCSIWAP, "SIOCSIWAP"},
    {SIOCGIWAP, "SIOCGIWAP"},
    {SIOCGIWAPLIST, "SIOCGIWAPLIST"},
    {SIOCSIWSCAN, "SIOCSIWSCAN"},
    {SIOCGIWSCAN, "SIOCGIWSCAN"},
    {SIOCSIWESSID, "SIOCSIWESSID"},
    {SIOCGIWESSID, "SIOCGIWESSID"},
    {SIOCSIWNICKN, "SIOCSIWNICKN"},
    {SIOCGIWNICKN, "SIOCGIWNICKN"},
    {SIOCSIWRATE, "SIOCSIWRATE"},
    {SIOCGIWRATE, "SIOCGIWRATE"},
    {SIOCSIWRTS, "SIOCSIWRTS"},
    {SIOCGIWRTS, "SIOCGIWRTS"},
    {SIOCSIWFRAG, "SIOCSIWFRAG"},
    {SIOCGIWFRAG, "SIOCGIWFRAG"},
    {SIOCSIWTXPOW, "SIOCSIWTXPOW"},
    {SIOCGIWTXPOW, "SIOCGIWTXPOW"},
    {SIOCSIWRETRY, "SIOCSIWRETRY"},
    {SIOCGIWRETRY, "SIOCGIWRETRY"},
    {SIOCSIWENCODE, "SIOCSIWENCODE"},
    {SIOCGIWENCODE, "SIOCGIWENCODE"},
    {SIOCSIWPOWER, "SIOCSIWPOWER"},
    {SIOCGIWPOWER, "SIOCGIWPOWER"},
    {SIOCSIWGENIE, "SIOCSIWGENIE"},
    {SIOCGIWGENIE, "SIOCGIWGENIE"},
    {SIOCSIWMLME, "SIOCSIWMLME"},
    {SIOCSIWAUTH, "SIOCSIWAUTH"},
    {SIOCGIWAUTH, "SIOCGIWAUTH"},
    {SIOCSIWENCODEEXT, "SIOCSIWENCODEEXT"},
    {SIOCGIWENCODEEXT, "SIOCGIWENCODEEXT"},
    {SIOCSIWPMKSA, "SIOCSIWPMKSA"},

    // <include/uapi/linux/sockios.h> see netdevice(7)
    {SIOCADDRT, "SIOCADDRT"},
    {SIOCDELRT, "SIOCDELRT"},
    {SIOCGIFNAME, "SIOCGIFNAME"},
    {SIOCSIFLINK, "SIOCSIFLINK"},
    {SIOCGIFCONF, "SIOCGIFCONF"},
    {SIOCGIFFLAGS, "SIOCGIFFLAGS"},
    {SIOCSIFFLAGS, "SIOCSIFFLAGS"},
    {SIOCGIFADDR, "SIOCGIFADDR"},
    {SIOCSIFADDR, "SIOCSIFADDR"},
    {SIOCGIFDSTADDR, "SIOCGIFDSTADDR"},
    {SIOCSIFDSTADDR, "SIOCSIFDSTADDR"},
    {SIOCGIFBRDADDR, "SIOCGIFBRDADDR"},
    {SIOCSIFBRDADDR, "SIOCSIFBRDADDR"},
    {SIOCGIFNETMASK, "SIOCGIFNETMASK"},
    {SIOCSIFNETMASK, "SIOCSIFNETMASK"},
    {SIOCGIFMETRIC, "SIOCGIFMETRIC"},
    {SIOCSIFMETRIC, "SIOCSIFMETRIC"},
    {SIOCGIFMEM, "SIOCGIFMEM"},
    {SIOCSIFMEM, "SIOCSIFMEM"},
    {SIOCGIFMTU, "SIOCGIFMTU"},
    {SIOCSIFMTU, "SIOCSIFMTU"},
    //  {OLD_SIOCGIFHWADDR, "OLD_SIOCGIFHWADDR"},
    {SIOCSIFHWADDR, "SIOCSIFHWADDR"},
    {SIOCGIFENCAP, "SIOCGIFENCAP"},
    {SIOCSIFENCAP, "SIOCSIFENCAP"},
    {SIOCGIFHWADDR, "SIOCGIFHWADDR"},
    {SIOCGIFSLAVE, "SIOCGIFSLAVE"},
    {SIOCSIFSLAVE, "SIOCSIFSLAVE"},
    {SIOCADDMULTI, "SIOCADDMULTI"},
    {SIOCDELMULTI, "SIOCDELMULTI"},
    // {SIOCADDRTOLD, "SIOCADDRTOLD"},
    //  {SIOCDELRTOLD, "SIOCDELRTOLD"},
    {SIOCDARP, "SIOCDARP"},
    {SIOCGARP, "SIOCGARP"},
    {SIOCSARP, "SIOCSARP"},
    {SIOCDRARP, "SIOCDRARP"},
    {SIOCGRARP, "SIOCGRARP"},
    {SIOCSRARP, "SIOCSRARP"},
    {SIOCGIFMAP, "SIOCGIFMAP"},
    {SIOCSIFMAP, "SIOCSIFMAP"}};

#endif
